image:
  repository: gristlabs/grist
  pullPolicy: IfNotPresent
  tag: 0.0.0
nameOverride: ''
fullnameOverride: ''
mountFiles: []
ingress:
  enabled: false
  className: null
  host: null
  path: /
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  hosts: []
  tls:
    enabled: true
    additional: []
homeWorker:
  command: []
  args: []
  replicas: 1
  securityContext: null
  shareProcessNamespace: true
  sidecars: []
  envVars: {}
  podAnnotations: {}
  service:
    type: ClusterIP
    port: 80
    targetPort: 8484
    annotations: {}
  probes:
    liveness:
      path: /status
      initialDelaySeconds: 10
    startup:
      path: /status
      initialDelaySeconds: 10
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  persistence: {}
docWorker:
  command: []
  args:
    - /bin/sh
    - '-c'
    - |
      set -e
      export GRIST_DOC_WORKER_ID=$(echo $POD_IP | tr  "."  "-")
      export APP_DOC_URL="$APP_HOME_URL/dw/$GRIST_DOC_WORKER_ID"
      export APP_DOC_INTERNAL_URL="http://$INTERNAL_LB/internal/dw/$GRIST_DOC_WORKER_ID"
      exec ./sandbox/run.sh
  replicas: 3
  shareProcessNamespace: true
  sidecars: []
  securityContext: null
  envVars: {}
  podAnnotations: {}
  service:
    type: ClusterIP
    port: 80
    targetPort: 8484
    annotations: {}
  probes:
    liveness:
      path: /status
      initialDelaySeconds: 10
    startup:
      path: /status
      initialDelaySeconds: 10
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  persistence: {}
loadBalancer:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: 1.25.3
  replicas: 2
  shareProcessNamespace: false
  sidecars: []
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
  envVars: {}
  podAnnotations: {}
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
    annotations: {}
  probes:
    liveness:
      path: /health
      targetPort: 8080
    startup:
      path: /health
      targetPort: 8080
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumeMounts:
    - name: cache
      mountPath: /var/cache/nginx/
    - name: run
      mountPath: /var/run
    - name: conf
      mountPath: /etc/nginx/conf.d
  volumes:
    - name: cache
      emptyDir: {}
    - name: run
      emptyDir: {}
    - name: conf
      emptyDir: {}
